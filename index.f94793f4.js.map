{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAGQ,EAHF,EAAgB,SAAS,IAAI,CAAC,aAAa,CAAC,MAYlD,SAAS,EAAS,CAAM,EACtB,OAAO,OAAO,EAAO,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAC3D,CAIA,SAAS,EAAa,CAAI,EAYxB,OATkB,EAFK,EAAK,gBAAgB,CAAC,OAEP,GAAG,CAAC,SAAC,CAA3C,EACE,MAAO,CACL,KAAM,EAAS,WAAW,CAAC,IAAI,GAC/B,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,EAAS,OAAO,CAAC,MAAM,CAC/B,IAAK,EAAS,OAAO,CAAC,GAAG,AAC3B,CACF,EAGF,CA1BE,CAFM,EAAkB,EAAG,AAapB,EAbyB,gBAAgB,CAAC,QAElC,IAAI,CAAC,SAAC,CAAA,CAAG,CAAxB,EACE,OAAO,EAAS,EAAE,OAAO,CAAC,MAAM,EAAI,EAAS,EAAE,OAAO,CAAC,MAAM,CAC/D,GAEA,EAAe,OAAO,CAAC,SAAC,CAAxB,EAAgC,OAAA,EAAc,MAAM,CAAC,E,GAyBvC,EAAa,gBAE7B,EAAa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar employeesList = document.body.querySelector(\"ul\");\nfunction sortList(list) {\n    var employeesArray = _to_consumable_array(list.querySelectorAll(\"li\"));\n    employeesArray.sort(function(a, b) {\n        return toNumber(b.dataset.salary) - toNumber(a.dataset.salary);\n    });\n    employeesArray.forEach(function(emp) {\n        return employeesList.append(emp);\n    });\n}\nfunction toNumber(string) {\n    return Number(string.split(\"$\").join(\"\").split(\",\").join(\"\"));\n}\nsortList(employeesList);\nfunction getEmployees(list) {\n    var employeesArray = list.querySelectorAll(\"li\");\n    var employees = _to_consumable_array(employeesArray).map(function(employee) {\n        return {\n            name: employee.textContent.trim(),\n            position: employee.dataset.position,\n            salary: employee.dataset.salary,\n            age: employee.dataset.age\n        };\n    });\n    return employees;\n}\n/* eslint-disable */ var newList = getEmployees(employeesCount);\ngetEmployees(employeesCount);\n\n//# sourceMappingURL=index.f94793f4.js.map\n","'use strict';\n'use strict';\n\nconst employeesList = document.body.querySelector('ul');\n\nfunction sortList(list) {\n  const employeesArray = [...list.querySelectorAll('li')];\n\n  employeesArray.sort((a, b) => {\n    return toNumber(b.dataset.salary) - toNumber(a.dataset.salary);\n  });\n\n  employeesArray.forEach((emp) => employeesList.append(emp));\n}\n\nfunction toNumber(string) {\n  return Number(string.split('$').join('').split(',').join(''));\n}\n\nsortList(employeesList);\n\nfunction getEmployees(list) {\n  const employeesArray = list.querySelectorAll('li');\n\n  const employees = [...employeesArray].map((employee) => {\n    return {\n      name: employee.textContent.trim(),\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    };\n  });\n\n  return employees;\n}\n\n/* eslint-disable */\nconst newList = getEmployees(employeesCount);\n\ngetEmployees(employeesCount);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","employeesArray","employeesList","document","body","querySelector","toNumber","string","Number","split","join","getEmployees","list","querySelectorAll","map","employee","textContent","trim","position","dataset","salary","age","sort","a","b","forEach","emp","append","employeesCount"],"version":3,"file":"index.f94793f4.js.map"}